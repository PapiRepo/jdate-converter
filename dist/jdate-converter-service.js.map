{"version":3,"sources":["webpack:///webpack/bootstrap cb68e59f638553f6fe29","webpack:///./src/jdate-converter-service.js","webpack:///external \"angular\"","webpack:///./src/jdate-converter.js"],"names":["angular","require","converter","module","service","vm","formatCache","toJsDate","dateFormat","undefined","obj","javaToJavaScript","replaceAll","str","substr","newSubstr","indexOf","replace","mapFragment","formatString","mapping","beginIndex","currentIndex","subFormat","substring","translate","escapeSource","escapeTarget","len","length","lastChar","currentChar","result","i","fragment","escapeEarlyStart","charAt","trim","exports"],"mappings":"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","file":"jdate-converter-service.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cb68e59f638553f6fe29","'use strict';\nvar angular = require(\"angular\"),\n    converter = require(\"./jdate-converter\"),\n    module = angular.module(\"jdateConverter\", []);\n\nmodule.service(\"jdateConverter\", function () {\n    var vm = this,\n        formatCache = {};\n\n\n    vm.toJsDate = function (dateFormat) {\n        if (formatCache[dateFormat] === undefined) {\n            formatCache[dateFormat] = converter.toJsDate(dateFormat);\n        }\n        return formatCache[dateFormat];\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./src/jdate-converter-service.js","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 1\n// module chunks = 0","/*\n * jdate-converter.js\n * Simple utility to convert Java date formats to JavaScript date formats\n * used for example in moment.js.\n *\n * Based on: \n * - https://github.com/TheCoder4eu/BootsFaces-OSP/blob/master/src/main/java/net/bootsfaces/utils/LocaleUtils.java\n * - https://github.com/MadMG/moment-jdateformatparser/blob/master/moment-jdateformatparser.js\n *\n */\n'use strict';\n(function () {\n    var obj = {},\n        javaToJavaScript = {\n            \"d\": \"D\",       // (day in month - one or two digits);\n            \"dd\": \"DD\",     // (day in month - two digits);\n            \"D\": \"DDD\",     // (day in year - one to three digits);\n            \"DD\": null,     // (day in year- two or three digits);\n            \"DDD\": \"DDDD\",  // (day in year- three digits);\n            \"F\": null,      // (day of week in month);\n            \"y\": \"YYYY\",    // (year - every digit);\n            \"yy\": \"YY\",     // (year - two digits);\n            \"yyy\": \"YYYY\",  // (year - three digits);\n            \"yyyy\": \"YYYY\", // (year - every digit);\n            \"Y\": null,      // (week year - two digits);\n            \"YY\": \"gg\",     // (week year - two digits);\n            \"YYY\": null,    // (week year - three digits);\n            \"YYYY\": \"gggg\", // (week year - all digits);\n            \"a\": \"A\",       // (AM or PM);\n            \"G\": null,      // (era - AD or BC);\n            \"M\": \"M\",       // (month in year - two digits, 1..12);\n            \"MM\": \"MM\",     // (month in year - two digits, 01..12);\n            \"MMM\": \"MMM\",   // (month in year - short text);\n            \"MMMM\": \"MMMM\", // (month in year - full text);\n            \"h\": \"h\",       // (hour - one or two digits, 12 hours, 1..12);\n            \"hh\": \"hh\",     // (hour - two digits, 12 hours, 01..12);\n            \"H\": \"H\",       // (hour - one or two digits, 24 hours, 0..23);\n            \"HH\": \"HH\",     // (hour - two digits, 24 hours, 00..23);\n            \"k\": \"k\",       // (hour - one or two digits, 12 hours, 1..24);\n            \"kk\": \"kk\",     // (hour - two digits, 24 hours, 01..24);\n            \"K\": null,      // (hour - one or two digits, 12 hours, 0..11);\n            \"KK\": null,     // (hour - two digits, 12 hours, 00..11);\n            \"m\": \"m\",       // (minutes - one or two digits);\n            \"mm\": \"mm\",     // (minutes - two digits);\n            \"s\": \"s\",       // (seconds- one or two digits);\n            \"ss\": \"ss\",     // (seconds - two digits);\n            \"S\": \"S\",       // (millisecond);\n            \"SS\": \"SS\",    // (millisecond);\n            \"SSS\": \"SSS\",  // (millisecond);\n            \"E\": \"ddd\",     // (day name in week - short);\n            \"EE\": \"ddd\",    // (day name in week - short);\n            \"EEE\": \"ddd\",   // (day name in week - short);\n            \"EEEE\": \"dddd\", // (day name in week - full);\n            \"w\": \"W\",       // (week in year - one or two digits);\n            \"ww\": \"WW\",     // (week in year - two digits, zero-padded);\n            \"W\": null,      // (week in month - one or two digits);\n            \"WW\": null,     // (week in month - two digits, zero-padded);\n            \"z\": null,      // (General time zone);\n            \"zz\": null,     // (General time zone);\n            \"zzz\": null,    // (General time zone);\n            \"zzzz\": null,   // (General time zone);\n            \"Z\": \"ZZ\",      // (RFC 822 time zone);\n            \"X\": null,      // (ISO 8601 time zone -  - hours only);\n            \"XX\": \"ZZ\",     // (ISO 8601 time zone - short);\n            \"XXX\": \"Z\",     // (ISO 8601 time zone - long);\n            \"u\": \"E\",       // (day number of week - 1=Monday, 7=Sunday);\n            // \"'\": \"[]\" // (escape character);\n        };\n\n    obj.replaceAll = function (str, substr, newSubstr) {\n        while (str.indexOf(substr) >= 0) {\n            str = str.replace(substr, newSubstr);\n        }\n        return str;\n    };\n\n    obj.mapFragment = function (formatString, mapping, beginIndex, currentIndex) {\n        var subFormat = formatString.substring(beginIndex, currentIndex);\n        // if null then ignore that fragment\n        if (mapping[subFormat] === null) {\n            subFormat = \"\";\n        }\n        // if not undefined then return that fragment from mapping\n        if (mapping[subFormat] !== undefined) {\n            subFormat = mapping[subFormat];\n        }\n        // otherwise return fragment from original\n        return subFormat;\n    };\n\n    obj.translate = function (formatString, mapping, escapeSource, escapeTarget) {\n        var len = formatString.length,\n            beginIndex = 1,\n            lastChar = null,\n            currentChar = \"\",\n            result = \"\",\n            i = 0,\n            fragment = \"\",\n            escapeEarlyStart = formatString.charAt(0) === escapeSource.charAt(0);\n\n        // hack for Java single quote char ( '' -> '), part 1/2\n        formatString = this.replaceAll(formatString, \"''\", \"\\u0007\");\n\n        for (i = 0; i < len; i += 1) {\n            currentChar = formatString.charAt(i);\n            if (i > 0 && lastChar !== currentChar) {\n                fragment = obj.mapFragment(formatString, mapping, beginIndex, i);\n                result += fragment;\n                beginIndex = i;\n                if (i < formatString.length) {\n                    lastChar = currentChar;\n                }\n            }\n\n            if (currentChar === escapeSource[0]) {\n                i += 1;\n                while (i < formatString.length && formatString.charAt(i) !== escapeSource[1]) {\n                    i += 1;\n                }\n                result += escapeTarget[0];\n                if (escapeEarlyStart) {\n                    result += formatString.substring(beginIndex, i);\n                } else {\n                    result += formatString.substring(beginIndex + 1, i);\n                }\n                result += escapeTarget[1];\n                i += 1;\n                if (i < formatString.length) {\n                    lastChar = formatString.charAt(i);\n                }\n                beginIndex = i;\n            }\n        }\n\n        if (beginIndex < formatString.length && i <= formatString.length) {\n            result += obj.mapFragment(formatString, mapping, beginIndex, i);\n        }\n\n        // hack for Java single quote char ( '' -> '), part 2/2\n        result = this.replaceAll(result, \"\\u0007\", \"'\");\n\n\n        // trimming whitespaces from beginning and end\n        return result.trim();\n    };\n\n    obj.toJsDate = function (formatString) {\n        return obj.translate(formatString, javaToJavaScript, \"''\", \"[]\");\n    };\n\n    exports.toJsDate = obj.toJsDate;\n}());\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/jdate-converter.js"],"sourceRoot":""}